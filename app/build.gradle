apply plugin: 'com.android.application'

def keystorePropertiesFile = file("Keystore/keystore.properties")
def keystoreProperties = null
if (keystorePropertiesFile.canRead()) {
    keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    signingConfigs {
        release {

        }
    }
    compileSdk 33
    defaultConfig {
        applicationId "io.github.doubi88.slideshowwallpaper"
        minSdkVersion 18
        targetSdk 33
        versionCode 3
        versionName "1.0.2"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    productFlavors {
    }
    namespace 'io.github.doubi88.slideshowwallpaper'
}

if (keystoreProperties != null) {
    android.signingConfigs.release.keyAlias keystoreProperties['keyAlias']
    android.signingConfigs.release.keyPassword keystoreProperties['keyPassword']
    android.signingConfigs.release.storeFile file(keystoreProperties['storeFile'])
    android.signingConfigs.release.storePassword keystoreProperties['storePassword']
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
}
